(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MemoryTable = function (_React$Component) {
	_inherits(MemoryTable, _React$Component);

	function MemoryTable(props) {
		_classCallCheck(this, MemoryTable);

		var _this = _possibleConstructorReturn(this, (MemoryTable.__proto__ || Object.getPrototypeOf(MemoryTable)).call(this, props));

		_this.state = {
			elements: []
		};
		return _this;
	}

	_createClass(MemoryTable, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			fetch('/api/memories').then(function (resp) {
				resp.json().then(function (json) {
					_this2.setState({
						elements: json.data
					});
				});
			});
		}
	}, {
		key: 'render',
		value: function render() {
			return React.createElement(
				'table',
				{ className: 'striped bordered' },
				React.createElement(
					'thead',
					null,
					React.createElement(
						'tr',
						null,
						React.createElement(
							'th',
							null,
							'ID'
						),
						React.createElement(
							'th',
							null,
							'Title'
						),
						React.createElement(
							'th',
							null,
							'Tags'
						),
						React.createElement(
							'th',
							null,
							'Date'
						),
						React.createElement('th', null)
					)
				),
				React.createElement(
					'tbody',
					null,
					this.state.elements.map(function (el) {
						return React.createElement(
							'tr',
							{ key: el.id },
							React.createElement(
								'td',
								null,
								el.id
							),
							React.createElement(
								'td',
								null,
								el.title
							),
							React.createElement(
								'td',
								null,
								el.tags.split(' ').map(function (e) {
									return React.createElement(
										'div',
										{ className: 'chip' },
										e
									);
								})
							),
							React.createElement(
								'td',
								null,
								moment(el.date).calendar()
							),
							React.createElement(
								'td',
								null,
								React.createElement(
									'a',
									{ className: 'btn-floating red', href: "/admin/memories/" + el.id },
									React.createElement(
										'i',
										{ className: 'material-icons' },
										'mode_edit'
									)
								)
							)
						);
					})
				)
			);
		}
	}]);

	return MemoryTable;
}(React.Component);

window.loadList = function () {
	ReactDOM.render(React.createElement(MemoryTable, null), document.getElementById('main-table'));
};

window.loadModel = function () {
	var $form = $('form');
	$form.submit(function (e) {
		e.preventDefault();
		$.ajax({
			url: $form.attr('action'),
			type: $form.attr('method'),
			data: $form.serialize(),
			success: function success(data) {
				if (data.error) {
					return Materialize.toast(data.error || 'Unknown error', 4000);
				}
				Materialize.toast('Done', 4000);
			},
			error: function error() {
				Materialize.toast('Unknown error', 4000);
			}
		});
	});
};

},{}]},{},[1]);
